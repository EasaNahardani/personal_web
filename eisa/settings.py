"""
Django settings for eisa project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from environs import Env
env = Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
default_key = 'django-insecure-l_ptb2e%*gl$1i9a8y9448xfw+-7*_!i35e9@na51d)9*kt(za'
SECRET_KEY = env("DJANGO_SECRET_KEY", default=default_key)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DJANGO_DEBUG", default=True)


if DEBUG:
    # If Debug is True, allow all.
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS = env.list('DJANGO_ALLOWED_HOSTS', default=['example.ir'])


# Application definition

INSTALLED_APPS = [
    'django.forms',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # my apps
    'app.apps.AppConfig',
    # third-party
    'rosetta',
    'parler',
]

###############################################################################
#                                Midlewares                                   #
###############################################################################
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

###############################################################################
#                                Other Stuffs                                 #
###############################################################################
ROOT_URLCONF = 'eisa.urls'
WSGI_APPLICATION = 'eisa.wsgi.application'
###############################################################################
#                                Templates                                    #
###############################################################################
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# in order to override django.forms widgets
FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'
###############################################################################
#                                Databases                                    #
###############################################################################

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
ENGINE = env("SQL_ENGINE", "django.db.backends.sqlite3")
NAME = env("SQL_DATABASE", BASE_DIR/ "db.sqlite3")

DATABASES = {
    "default": env.dj_db_url("DATABASE_URL", default=f"sqlite:///{NAME}")
}

###############################################################################
#                                 Authentications                             #
###############################################################################

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

###############################################################################
#                                i18n & l10n                                  #
###############################################################################

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = 'en'
LANGUAGES = (
    ('en', _('English')),
    ('es', _('Spanish')),
    ('de', _('German')),
    ('fa', _('Persian')),
)
LOCALE_PATHS = (
    BASE_DIR / 'locale/',
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True
###############################################################################
#                          Django-Parler                                     #
###############################################################################

PARLER_LANGUAGES = {
    None: (
        {'code': 'en'},
        {'code': 'es'},
        {'code': 'fa'},
        {'code': 'de'},
    ),
    'default': {
        'fallback': 'en',
        'hide_untranslated': False,
    }
}

 # to disable caching fields
 # PARLER_ENABLE_CACHING = False

 # If Parler runs on multiple sites that share the same cache
 # PARLER_CACHE_PREFIX = ‘mysite’
###############################################################################
#                                Rosetta                                      #
###############################################################################
# login page  for translators - default is LOGIN_URL
ROSETTA_LOGIN_URL = ''
###############################################################################
#                                Admin                                        #
###############################################################################
# Admin URL Definition
ADMIN_URL = env('DJANGO_ADMIN_URL', 'admin/')


###############################################################################
#                          Media & Static                                     #
###############################################################################

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [(BASE_DIR / 'static')]
STATIC_ROOT = BASE_DIR / 'staticfiles'
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
###############################################################################
#                                Messages                                     #
###############################################################################

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info alert',
    messages.INFO: 'alert-info alert',
    messages.SUCCESS: 'alert-success alert',
    messages.WARNING: 'alert-warning alert',
    messages.ERROR: 'alert-danger alert',
}

###############################################################################
#                             Security & deployment                           #
###############################################################################
# security
###############################################################################
#                                                                            #
###############################################################################
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
